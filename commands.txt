#bumpversion --new-version 4.0 release --allow-dirty (current-versions=4.0rc1)
#tag_name is templated and set by default to `v{new_version}`
#Javier bumpversion config - https://github.com/audreyr/cookiecutter-pypackage/blob/master/setup.cfg
[bumpversion]
current_version = 0.1.1
commit = True
tag = True

[metadata]
description-file = README.rst

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = version='{new_version}'

#It is passible to pass the tag name explicitly, but it would be easier to set `tag_name = {new_version}` in the configuration file (if both the tag and the version could use the same value).

#
[bumpversion]
current_version = 4.0
commit = True
parse = (?P<major>\d+)\.(?P<minor>\d+)((\.(?P<patch>\d+))?(?P<rtype>a|(rc?))(?P<rnum>\d+))?
serialize =
    {major}.{minor}.{patch}{rtype}{rnum}
    {major}.{minor}{rtype}{rnum}
    {major}.{minor}.{patch}
    {major}.{minor}

[bumpversion:part:rtype]
optional_value = r
values =
    a
    rc
    r 

So let's say `4.0` has been released and works start in a new pach:
`bumpversion patch` -> `4.0.1a0`

[6:24]  
the patch goes through a series of releases:

[6:24]  
`bumpversion rnum` -> `4.0.1a1`
`bumpversion rnum` -> `4.0.1a2`
`bumpversion rnum` -> `4.0.1a3`

[6:26]  
Then it becomes stable and is considered a release candidate:
`bumpversion rtype` -> `4.0.1rc0`
some more work is done:
`bumpversion rnum` -> `4.0.1rc1`
`bumpversion rnum` -> `4.0.1rc2`
`bumpversion rnum` -> `4.0.1rc3`
and then the patch is released:
`bumpversion rtype` -> `4.0.1`

[6:29]  
If a new minor version gets created with some more features, then the flow is very similar:
`bumpversion minor` -> `4.1a0`
`bumpversion rnum` -> `4.1a1`
`bumpversion rtype` ->`4.1rc0`
`bumpversion rtype` -> `4.1`

[6:33]  
for major version, the flow is also the same:
`bumpversion major`-> `5.0a0`
and if you want to go straight to the release then `--new-version` can be used just as we discussed:
`bumpversion --new-version 5.0 part` -> `5.0`
even if you want to go to a release number that is not logically the following one:
`bumpversion --new-version 6.3.2 part`-> `6.3.2`
